import discord
import httpx
import os

from keep_alive import keep_alive

# === Setup Keep Alive ===
keep_alive()

# === Setup SecretKey ===
TARGET_USER_ID = int(os.environ["TARGET_USER_ID"])
OPENROUTER_API_KEY = os.environ["OPENROUTER_API_KEY"]
DISCORD_BOT_TOKEN = os.environ["DISCORD_BOT_TOKEN"]

intents = discord.Intents.default()
intents.message_content = True
intents.messages = True
intents.guilds = True

client = discord.Client(intents=intents)


# === AI Generate Text and Config Prompt ===
async def generate_reply(user_msg: str, is_reply=False) -> str:
    try:
        system_prompt = (
            "‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡πÅ‡∏ä‡∏ó‡∏ö‡∏≠‡∏ó‡∏ú‡∏π‡πâ‡∏ä‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå‡∏î‡∏µ ‡∏â‡∏•‡∏≤‡∏î ‡∏°‡∏µ‡πÑ‡∏´‡∏ß‡∏û‡∏£‡∏¥‡∏ö ‡πÅ‡∏•‡∏∞‡∏£‡∏π‡πâ‡∏£‡∏≠‡∏ö‡πÇ‡∏•‡∏Å"
            "‡∏û‡∏π‡∏î‡∏Ñ‡∏∏‡∏¢‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡πâ‡∏≥‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏±‡∏ô‡πÄ‡∏≠‡∏á ‡∏™‡∏ô‡∏∏‡∏Å‡∏™‡∏ô‡∏≤‡∏ô ‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏µ‡πâ‡∏¢‡∏ô ‡πÑ‡∏°‡πà‡∏´‡∏•‡∏≠‡∏ô ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡πÇ‡∏á‡πà"
            "‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏™‡∏≤‡∏£‡∏∞ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏£‡∏≠‡∏ö‡∏ï‡∏±‡∏ß ‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå ‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ ‡∏ß‡∏±‡∏í‡∏ô‡∏ò‡∏£‡∏£‡∏° ‡πÅ‡∏•‡∏∞‡πÑ‡∏•‡∏ü‡πå‡∏™‡πÑ‡∏ï‡∏•‡πå ‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏á‡πà‡∏≤‡∏¢"
            "‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏° ‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ö‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏∏‡∏†‡∏≤‡∏û‡πÅ‡∏•‡∏∞‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡πÅ‡∏ö‡∏ö‡∏â‡∏•‡∏≤‡∏î"
            "‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£‡∏î‡πâ‡∏ß‡∏¢‡∏†‡∏≤‡∏©‡∏≤‡∏ò‡∏£‡∏£‡∏°‡∏ä‡∏≤‡∏ï‡∏¥‡πÅ‡∏ö‡∏ö‡∏Ñ‡∏ô‡πÄ‡∏Å‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏¥‡∏ï‡∏£ ‡πÑ‡∏°‡πà‡πÅ‡∏Ç‡πá‡∏á ‡πÑ‡∏°‡πà‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏´‡∏∏‡πà‡∏ô‡∏¢‡∏ô‡∏ï‡πå"
        )
        if is_reply:
            system_prompt += " ‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ö‡∏£‡∏¥‡∏ö‡∏ó‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤"

        async with httpx.AsyncClient() as http:
            response = await http.post(
                "https://openrouter.ai/api/v1/chat/completions",
                headers={
                    "Authorization": f"Bearer {OPENROUTER_API_KEY}",
                    "HTTP-Referer": "https://discord.com",
                    "Content-Type": "application/json",
                },
                json={
                    "model":
                    "deepseek/deepseek-r1:free",
                    "messages": [{
                        "role": "system",
                        "content": system_prompt
                    }, {
                        "role": "user",
                        "content": user_msg
                    }]
                })
            result = response.json()
            print("üîç OpenRouter result:", result)
            return result["choices"][0]["message"]["content"]
    except Exception as e:
        print("‚ùå OpenRouter error:", e)
        return "‡∏â‡∏±‡∏ô‡∏ï‡∏≠‡∏ö‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏ó‡∏µ‡∏ô‡∏∞"


# === Check Bot Ready or Not? ===
@client.event
async def on_ready():
    print(f'‚úÖ Bot logged in as {client.user}')


# === Logic Code ===
@client.event
async def on_message(message):
    if message.author.bot:
        return

    should_reply = False
    is_reply = False

    # === Someone mention me or bot  ===
    mentioned_ids = [user.id for user in message.mentions]

    if TARGET_USER_ID in mentioned_ids or client.user.id in mentioned_ids:
        should_reply = True

        print(
            f"[Trigger: Mention YOU or BOT] {message.author.name}: {message.content}"
        )

    # === Bot reply chat ===
    elif message.reference:
        try:
            ref_msg = await message.channel.fetch_message(
                message.reference.message_id)

            if ref_msg.author.id in [TARGET_USER_ID, client.user.id]:
                should_reply = True
                is_reply = True

                print(
                    f"[Trigger: Reply to YOU or BOT] {message.author.name}: {message.content}"
                )

                if ref_msg.author.id == TARGET_USER_ID and message.channel.type != discord.ChannelType.private:

                    try:
                        await message.author.send(
                            "‡∏ü‡∏•‡∏∏‡πä‡∏Ñ‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏π‡πà ‡πÅ‡∏ï‡πà‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏ï‡∏≠‡∏ö")
                        print(f"üì© DM sent to {message.author.name}")

                    except Exception as e:
                        print(
                            f"‚ùå Failed to send DM to {message.author.name}: {e}"
                        )

        except:
            pass

    # === Bot reply chat using by AI ===
    if should_reply:
        prompt = message.content
        try:
            async with message.channel.typing():
                reply = await generate_reply(prompt, is_reply)

            await message.reply(reply)

        except Exception as e:
            print("‚ùå Failed to send reply:", e)

            await message.reply("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ô‡∏∞")


client.run(DISCORD_BOT_TOKEN)
