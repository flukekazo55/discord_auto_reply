import os
import discord
import httpx

from keep_alive import keep_alive

# === Start Flask Keep-Alive Server ===
keep_alive()

# === Load Environment Variables ===
TARGET_USER_ID = int(os.getenv("TARGET_USER_ID"))
OPENROUTER_API_KEY = os.getenv("OPENROUTER_API_KEY")
DISCORD_BOT_TOKEN = os.getenv("DISCORD_BOT_TOKEN")

# === Discord Intents Setup ===
intents = discord.Intents.default()
intents.message_content = True
intents.messages = True
intents.guilds = True

client = discord.Client(intents=intents)

# === AI Response Function ===
async def generate_reply(user_msg: str, is_reply: bool = False) -> str:
    prompt = (
        "‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡πÅ‡∏ä‡∏ó‡∏ö‡∏≠‡∏ó‡∏ú‡∏π‡πâ‡∏ä‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå‡∏î‡∏µ ‡∏â‡∏•‡∏≤‡∏î ‡∏°‡∏µ‡πÑ‡∏´‡∏ß‡∏û‡∏£‡∏¥‡∏ö ‡πÅ‡∏•‡∏∞‡∏£‡∏π‡πâ‡∏£‡∏≠‡∏ö‡πÇ‡∏•‡∏Å "
        "‡∏û‡∏π‡∏î‡∏Ñ‡∏∏‡∏¢‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡πâ‡∏≥‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏±‡∏ô‡πÄ‡∏≠‡∏á ‡∏™‡∏ô‡∏∏‡∏Å‡∏™‡∏ô‡∏≤‡∏ô ‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏µ‡πâ‡∏¢‡∏ô ‡πÑ‡∏°‡πà‡∏´‡∏•‡∏≠‡∏ô ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡πÇ‡∏á‡πà "
        "‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏á‡πà‡∏≤‡∏¢ "
        "‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÑ‡∏°‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ö‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏∏‡∏†‡∏≤‡∏û‡πÅ‡∏•‡∏∞‡∏â‡∏•‡∏≤‡∏î "
        "‡πÉ‡∏ä‡πâ‡∏†‡∏≤‡∏©‡∏≤‡∏Ñ‡∏ô‡πÄ‡∏Å‡πà‡∏á‡πÅ‡∏ï‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏¥‡∏ï‡∏£ ‡πÑ‡∏°‡πà‡πÅ‡∏Ç‡πá‡∏á ‡πÑ‡∏°‡πà‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏´‡∏∏‡πà‡∏ô‡∏¢‡∏ô‡∏ï‡πå"
    )
    if is_reply:
        prompt += " ‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ö‡∏£‡∏¥‡∏ö‡∏ó‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤"

    try:
        async with httpx.AsyncClient() as http:
            response = await http.post(
                "https://openrouter.ai/api/v1/chat/completions",
                headers={
                    "Authorization": f"Bearer {OPENROUTER_API_KEY}",
                    "HTTP-Referer": "https://discord.com",
                    "Content-Type": "application/json",
                },
                json={
                    "model": "deepseek/deepseek-r1:free",
                    "messages": [
                        {"role": "system", "content": prompt},
                        {"role": "user", "content": user_msg}
                    ]
                }
            )
            result = response.json()
            print("üîç OpenRouter result:", result)
            return result["choices"][0]["message"]["content"]
    except Exception as e:
        print("‚ùå OpenRouter error:", e)
        return "‡∏â‡∏±‡∏ô‡∏ï‡∏≠‡∏ö‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏ó‡∏µ‡∏ô‡∏∞"

# === On Bot Ready ===
@client.event
async def on_ready():
    print(f"‚úÖ Bot logged in as {client.user}")

# === Main Bot Logic ===
@client.event
async def on_message(message):
    if message.author.bot:
        return

    should_reply = False
    is_reply = False
    mentioned_ids = [user.id for user in message.mentions]

    # === If Mentioned ===
    if TARGET_USER_ID in mentioned_ids or client.user.id in mentioned_ids:
        should_reply = True
        print(f"[Mention Trigger] {message.author.name}: {message.content}")

    # === If Reply to Message ===
    elif message.reference:
        try:
            ref_msg = await message.channel.fetch_message(message.reference.message_id)
            if ref_msg.author.id in [TARGET_USER_ID, client.user.id]:
                should_reply = True
                is_reply = True
                print(f"[Reply Trigger] {message.author.name}: {message.content}")

                # Send DM if replying to you (not bot)
                if ref_msg.author.id == TARGET_USER_ID and message.channel.type != discord.ChannelType.private:
                    try:
                        await message.author.send("‡∏ü‡∏•‡∏∏‡πä‡∏Ñ‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏π‡πà ‡πÅ‡∏ï‡πà‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏ï‡∏≠‡∏ö")
                        print(f"üì© DM sent to {message.author.name}")
                    except Exception as e:
                        print(f"‚ùå Failed to send DM: {e}")
        except:
            pass

    # === Send AI Reply ===
    if should_reply:
        try:
            async with message.channel.typing():
                reply = await generate_reply(message.content, is_reply)
            await message.reply(reply)
        except Exception as e:
            print("‚ùå Failed to send reply:", e)
            await message.reply("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ô‡∏∞")

# === Run the Bot ===
client.run(DISCORD_BOT_TOKEN)
